mat_3 <- matrix(my_vec, nrow = 3, ncol = 2)
mat_4 <- my_vec$3
mat_4 <- my_vec,is.na(3)
mat_4 <- my_vec is.na(3)
mat_4 <- my_vec
mat_4 <- is.na(3)
mat_4 <- my_vec
multiple_of_3 = (mat_4 %% 3) ==0
head(multiple_of_3)
length(multiple_of_3)
multiple_of_3 = mat_4[(mat_4 %% 3) == 0]
head(multiple_of_3)
length(multiple_of_3)
mat_4 <- matrix(my_vec, nrow = 2)
multiple_of_3 = mat_4[(mat_4 %% 3) == 0]
head(multiple_of_3)
length(multiple_of_3)
View(mat_4)
mat_4 <- my_vec
multiple_of_3 = mat_4[(mat_4 %% 3) == 0]
head(multiple_of_3)
length(multiple_of_3)
mat_4 <- matrix(my_vec, nrow = 2)
View(mat_4)
mat_4 <- my_vec
multiple_of_3 = mat_4[(mat_4 %% 3) == 0]
head(multiple_of_3)
length(multiple_of_3)
mat_4 <- matrix(my_vec)
View(mat_4)
multiple_of_3 = mat_4[(mat_4 !3) == 0]
View(mat_4)
mat_4 <- 3
mat_4 <- my_vec
mat_4 <- my_vec[1,2,4,5]
mat_4 <- my_vec[c(1,2,4,5)]
mat_4 <- my_vec
mat_4 <- matrix(my_vec)
View(mat_4)
View(mat_4)
View(mat_4)
View(mat_1)
mat_4 <- matrix(my_vec, byrow = TRUE)
View(mat_4)
mat_4 <- matrix(my_vec%*%3)
mat_4 <- matrix(my_vec(!is.na(3)))
#create a numeric vector of length 6 called my_vec. It should contain integers from 1 to 6.
my_vec <- c(1:6)
mat_1 = matrix(my_vec, nrow = 3)
mat_1 [3]
mat_1[3,1]
mat_2 <- matrix(my_vec, nrow = 2, ncol = 3)
mat_3 <- matrix(my_vec, nrow = 3, ncol = 2)
mat_4 <- matrix(my_vec(!is.na(3)))
mat_4 <- matrix(my_vec(!is.na(3)))
mat_4 <- matrix(my_vec(is.na!(3)))
mat_4 <- matrix(my_vec(is.na!3)
my_vec = rep(1:3, 5)
my_vec
boolean_vector <- sunset(c(FALSE,FALSE,TRUE))
data.frame(my_vec, my_bool_vec)
boolean_vector <- subset(c(FALSE,FALSE,TRUE))
View(mat_4)
boolean_vector <- subset.data.frame(mat_4, v1 *3 )
boolean_vector <- subset.data.frame(mat_4, v1 ==3 )
boolean_vector <- subset.data.frame(mat_4, v1 ==3)
my_vec = rep(1:3, 5)
my_vec
boolean_vector <- subset.data.frame(mat_4, v1 ==3)
boolean_vector <- subset.data.frame([mat_4, v1 ==3])
View(mat_4)
mat_4 <- my_vec
boolean_vector <- (c(FALSE,FALSE,TRUE))
mat_4 == boolean_vector
mat_4 == boolean_vector (c(FALSE, FALSE, TRUE))
boolean_vector <- (c(FALSE,FALSE,TRUE))
mat_4 == boolean_vector(c(FALSE, FALSE, TRUE))
my_bool_vec <- subset(boolean_vector, mat_4)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(boolean_vector, mat_4)
my_bool_vec <- subset(boolean_vector)
my_bool_vec <- subset(mat_4(boolean_vector))
my_bool_vec <- subset(mat_4, subset = boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, subset = c(FALSE, FALSE, TRUE))
data.frame(my_vec, my_bool_vec)
boolean_vector <- (c(FALSE,FALSE,TRUE))
my_bool_vec <- subset(boolean_vector, subset = 3)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(boolean_vector, [subset = 3])
my_bool_vec <- subset(boolean_vector, subset = 3)
my_bool_vec <- subset(boolean_vector, subset = boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(3, subset = boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(!3, subset = boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, subset = 3)
my_bool_vec <- subset(mat_4, subset = boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, subset = boolean_vector, drop(3) )
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, subset = boolean_vector, drop = 3 )
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, subset = boolean_vector, drop = False )
data.frame(my_vec, my_bool_vec)
boolean_vector <- (c(FALSE,FALSE,TRUE))
my_bool_vec <- subset(mat_4, subset = boolean_vector, drop = False )
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(boolean_vector, subset = mat_4, drop = False )
mat_4 <- my_vec
boolean_vector <- (c(FALSE,FALSE,TRUE))
my_bool_vec <- subset(mat_4, subset = boolean_vector, drop = False )
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, subset = boolean_vector, select = 3)
data.frame(my_vec, my_bool_vec)
mat_4 <- (c(FALSE,FALSE,TRUE))
my_bool_vec <- subset(mat_4, subset = boolean_vector, select)
data.frame(my_vec, my_bool_vec)
mat_4[(c(FALSE,FALSE,TRUE))]
my_bool_vec <- subset(mat_4, boolean_vector$3)
mat_4 <- matrix(data = my_vec,nrow = 2, ncol = 3, byrow = TRUE)
mat_4 <- matrix(data = my_vec,nrow = 2, byrow = TRUE)
my_vec = rep(1:3, 5)
my_vec
mat_4 <- my_vec
mat_4 <- matrix(data = my_vec,nrow = 2, byrow = TRUE)
mat_4 <- matrix(data = my_vec,nrow = , byrow = TRUE)
View(mat_4)
my_bool_vec <- subset(mat_4, boolean_vector, drop = TRUE)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, boolean_vector, drop = FALSE)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, boolean_vector, drop =)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, boolean_vector, byrow = FALSE)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, byrow = FALSE)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4$1,2, byrow = FALSE)
boolean_vector <- (c(FALSE, FALSE, TRUE))
my_bool_vec <- subset(mat_4,boolean_vector, byrow = FALSE)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4,boolean_vector, byrow = TRUE)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset([mat_4,boolean_vector, byrow = TRUE])
data.frame(my_vec, my_bool_vec)
mat_4 <- matrix(my_vec)
boolean_vector <- c(FALSE, FALSE, TRUE)
subset(mat_4, data$variable != 3)
subset(mat_4, data$variable !=3)
subset(mat_4, data$variable != *3)
subset(mat_4, data$variable != c(1, 2))
subset(mat_4, mat_4$variable != c(1, 2))
subset(boolean_vector, mat_4$variable != c(1, 2))
my_bool_vector <- subset(boolean_vector, mat_4$variable != c(1, 2))
my_bool_vector <- subset(mat_4, boolean_vector$variable != c(1, 2))
boolean_vector <- mat_4(c(FALSE, FALSE, TRUE))
mat_4 <- matrix(my_vec)
boolean_vector <- mat_4(c(FALSE, FALSE, TRUE))
boolean_vector <- (c(FALSE, FALSE, TRUE))
my_bool_vector <- subset(mat_4, boolean_vector$variable != c(1, 2))
my_bool_vector <- subset(mat_4, boolean_vector$1, 2 != c(1, 2))
my_bool_vector <- subset[mat_4, boolean_vector$1, 2 != c(1, 2)]
my_bool_vector <- subset[mat_4, boolean_vector$, 2 != c(1, 2)]
my_bool_vector <- subset[[mat_4, boolean_vector$, 2 != c(1, 2)]]
my_bool_vector <- subset[[mat_4, boolean_vector$, != c(1, 2)]]
my_bool_vector <- subset[[mat_4, boolean_vector$ != c(1, 2)]]
my_bool_vector <- subset[[mat_4, boolean_vector$1 != c(1, 2)]]
my_bool_vector <- subset[[boolean_vector, mat_4$1 != c(1, 2)]]
my_bool_vector <- subset[[boolean_vector, mat_4$ != c(1, 2)]]
my_bool_vector <- subset[[boolean_vector, mat_4$False != c(1, 2)]]
my_bool_vector <- subset[[mat_4, boolean_vector$False != c(1, 2)]]
my_bool_vector <- subset[[mat_4, boolean_vector$ my_bool_vector != c(FALSE)]]
my_bool_vector <- subset[[mat_4, boolean_vector$my_bool_vector != c(FALSE)]]
my_bool_vector <- subset[[mat_4, mat_4$my_bool_vector != c(FALSE)]]
my_bool_vector <- subset[[mat_4, mat_4$boolean_vector != c(FALSE)]]
mat_4 <- c(1 = False, 2 = FALSE)
mat_4 <- c(False = 1, FALSE = 2, TRUE = 3)
mat_4 <- matrix(my_vec)
mat_4 <- c(False = 1, FALSE = 2, TRUE = 3)
View(mat_4)
mat_4 <- matrix(my_vec)
mat_4 <- c[c(FALSE, FALSE,TRUE)]
mat_4 <- [c(FALSE, FALSE,TRUE)]
mat_4[c(FALSE, FALSE,TRUE)]
View(mat_4)
my_vec = rep(1:3, 5)
mat_4 <- my_vec
mat_4 <- matrix(my_vec)
View(mat_4)
mat_4 <- matrix(my_vec$3)
mat_4 <- matrix(my_vec$!3)
mat_4 <- matrix(my_vec$V1 ==1)
my_vec = rep(1:3, 5)
my_vec
boolean_vector <- c(FALSE, FALSE, TRUE)
mat_4 <- matrix(my_vec$V1 ==1)
mat_4 <- matrix(my_vec$boolean_vector ==1)
View(mat_4)
mat_4 <- matrix(my_vec$boolean_vector < 3)
mat_4[mat_4$V1 <3]
mat_4[mat_4$z < 3]
mat_4[boolean_vector$z < 3]
my_vec = rep(1:3, 5)
my_vec
mat_4[boolean_vector$1 < 3]
mat_4[boolean_vector$1 < 3, ]
mat_4[,2, drop = FALSE ]
my_vec = rep(1:3, 5)
my_vec
boolean_vector <- c(FALSE, FALSE, TRUE)
mat_4 <- matrix(my_vec)
View(my_bool_vec)
mat_4[,2, drop = FALSE ]
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, boolean_vector)
data.frame(my_vec, my_bool_vec)
my_bool_vec <- subset(mat_4, boolean_vector, 3)
my_bool_vec <- subset(mat_4, boolean_vector, drop = False)
mat_4[c(FALSE, FALSE, TRUE)]
my_bool_vec <- subset(mat_4, boolean_vector, drop = False)
my_bool_vec <- subset(mat_4, boolean_vector)
data.frame(my_vec, my_bool_vec)
mat_4[c(TRUE = 3)]
mat_4[c(3 = TRUE)]
my_bool_vec[c(FALSE, FALSE, TRUE)]
boolean_vector <- c(FALSE =1, FALSE=2, TRUE=3)
my_vec = rep(1:3, 5)
my_vec == 3
View(my_bool_vec)
View(mat_4)
my_bool_vec <- my_vec
View(mat_4)
data.frame(my_vec, my_bool_vec)
vec_2 <- my_vec == 3
vec_2
my_bool_vec <- my_vec == 3
my_bool_vec
data.frame(my_vec, my_bool_vec)
my_vec == 3
my_bool_vec <- my_vec
data.frame(my_vec, my_bool_vec)
my_bool_vec <- my_vec ==3
data.frame(my_vec, my_bool_vec)
mat_4 <- my_vec
mat_4 ==*3
mat_4 <- matrix(my_vec, nrow = )
View(mat_4)
#create a numeric vector of length 6 called my_vec. It should contain integers from 1 to 6.
my_vec <- c(1:6)
mat_1 = matrix(my_vec, nrow = 3)
mat_1 [3]
mat_1[3,1]
mat_2 <- matrix(my_vec, nrow = 2, ncol = 3)
mat_3 <- matrix(my_vec, nrow = 3, ncol = 2)
mat_4 <- matrix(my_vec, nrow = )
my_vec
View(mat_4)
View(mat_3)
View(mat_2)
View(mat_4)
View(mat_4)
mat_1 [3]
mat_4 <- matrix(my_vec, nrow =4)
mat_4 <- matrix(my_vec, nrow = 2)
mat_4 <- matrix(my_vec, nrow = 5)
#create a numeric vector of length 6 called my_vec. It should contain integers from 1 to 6.
my_vec <- c(1:6)
mat_1 = matrix(my_vec, nrow = 3)
mat_1 [3]
mat_1[3,1]
mat_2 <- matrix(my_vec, nrow = 2, ncol = 3)
mat_3 <- matrix(my_vec, nrow = 3, ncol = 2)
mat_4 <- matrix(my_vec, nrow = 5)
View(mat_4)
my_list_1 <- (c(5.2), c("5.2"), c(0:5))
my_list_1 <- c((5.2), c("5.2"), c(0:5))
my_list_1
my_list_1 <- c((5.2), "c(5.2)", c(0:5))
my_list_1
my_list_1 <- c(two = (5.2), one = "c(5.2)", three = c(0:5))
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1 <- list(c(two = (5.2), one = "c(5.2)", three = c(0:5)))
my_list_1
my_list_1[[1]]
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1[["one"]]
my_list_1 <- list(c(two = 5.2, one = "5.2", three = 0:5))
my_list_1
my_list_1[[1]]
my_list_1 <- list(c(two = 5.2, one = “five point two”, three = 0:5))
my_list_1 <- list(c(two = 5.2, one = "five point two", three = 0:5))
my_list_1
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1 <- list(c(two = 5.2, one = "five point two", three = 0:5))
my_list_1
my_list_1[[1]]
View(my_list_1)
my_list_1 <- list(c(two = 5.2, one = "five point two", three = 0:5))
my_list_1
two <- c(5.2)
one <- "c(5.2)"
three <- c(0:5)
my_list_1 <- list(c(two, one, three))
my_list_1
View(my_list_1)
two <- c(5.2)
one <- c("five point two")
three <- c(0:5)
my_list_1 <- list(c(two, "one", three))
View(my_list_1)
my_list_1 <- list(c(two, one, three))
my_list_1
View(my_list_1)
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1 <- list(c(two = 5.2, one = "five point two", three = 0:5))
my_list_1[[1]]
View(my_list_1)
my_list_1 <- list(c(two = 5.2, one = "five point two", three = c(0:5)))
View(my_list_1)
my_list_1
my_list_1 <- list(c(two = 5.2, one = "five point two", three == c(0:5)))
my_list_1
my_list_1 <- list(c(two = 5.2, one = "five point two", three = c(0:5)))
my_list_1
my_list_1 <- list("two" = 5.2, "one" = "five point two", "three" = 0:5)
my_list_1
View(my_list_1)
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1[["one"]]
my_list_1 <- list(two, one, three)
my_list_1
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1[["one"]]
my_list_1$one
my_list_1$"one"
my_list_1$1
my_list_1$"1"
my_list_1 <- list("two" = 5.2, "one" = "five point two", "three" = 0:5)
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1[["one"]]
my_list_1b <- list(two, one, three)
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1b <- list(two, one, three)
my_list_1
my_list_1b[[1]]
my_list_1b[[as.numeric("1")]]
my_list_1b[["1"]]
my_list_1b[["one"]]
my_list_1$one
my_list_1b[[1]]
my_list_1b[[as.numeric("1")]]
my_list_1b[["1"]]
my_list_1b[["one"]]
my_list_1b[[1]]
my_list_1b[[as.numeric("1")]]
my_list_1b[["1"]]
my_list_1b[["one"]]
my_list_1b$one
my_list_1b$"one"
my_list_1b$1
my_list_1b$"1"
my_list_1 <- list("two" = 5.2, "one" = "five point two", "three" = 0:5)
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1[["one"]]
my_list_1$one
my_list_1$"one"
my_list_1$1
my_list_1$"1"
my_list_1b[[1]]
my_list_1b[[as.numeric("1")]]
my_list_1b[["1"]]
my_list_1b[["one"]]
my_list_1b$one
my_list_1b$"one"
my_list_1b$1
my_list_1b$"1"
View(my_list_1)
View(my_list_1b)
my_list_1 <- list("two" = 5.2, "one" = "five point two", "three" = 0:5)
my_list_1
my_list_1[[1]]
my_list_1[[as.numeric("1")]]
my_list_1[["1"]]
my_list_1[["one"]]
my_list_1$one
my_list_1$"one"
my_list_1$1
my_list_1$"1"
knitr::opts_chunk$set(echo = TRUE)
install.packages("psych")
require(psych)
pairs.panels(iris)
names(iris)
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(bird.sta.csv)
data(hab.sta.cvs)
install.packages("here")
knitr::opts_chunk$set(echo = TRUE)
---
title: "Lab 03: Data Exploration and Deterministic Functions"
author: "Ednita Tavarez-Jimenez"
Date: "September 21, 2022"
output:
html_document:
toc: true
toc_float: true
theme: journal
---
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("psych")
install.packages("psych")
require(psych)
pairs.panels(iris)
names(iris)
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(bird.sta.csv)
data(hab.sta.cvs)
install.packages("here")
install.packages("psych")
install.packages("psych")
knitr::opts_chunk$set(echo = TRUE)
require(psych)
pairs.panels(iris)
names(iris)
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(bird.sta.csv)
data(hab.sta.cvs)
setwd("~/Environmental Data/Environmental_Data/Data")
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(bird.sta.csv)
setwd("~/Environmental Data/Environmental_Data/Data")
setwd("~/Environmental Data/Environmental_Data/Data")
require(psych)
pairs.panels(iris)
names(iris)
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(bird.)
setwd("~/Environmental Data/Environmental_Data/Data")
setwd("~/Environmental Data/Environmental_Data/Data")
install.packages("psych")
install.packages("psych")
setwd("~/Environmental Data/Environmental_Data/Data")
setwd("~/Environmental Data/Environmental_Data/Data")
knitr::opts_chunk$set(echo = TRUE)
dat_hab = read.csv(here("data", "hab.sta.csv", "bird.sta.cvs"))
dat_bird = read.csv(
here("data", "bird.sta.csv"))
require(here)
setwd("~/Environmental Data/Environmental_Data/Data")
require(here)
dat_bird = read.csv(
here("data", "bird.sta.csv"))
dat_hab = read.csv(here("data", "hab.sta.csv", "bird.sta.cvs"))
---
title: "Lab 03: Data Exploration and Deterministic Functions"
author: "Ednita Tavarez-Jimenez"
Date: "September 21, 2022"
output:
html_document:
toc: true
toc_float: true
theme: journal
---
knitr::opts_chunk$set(echo = TRUE)
require(psych)
install.packages("psych")
install.packages("psych")
knitr::opts_chunk$set(echo = TRUE)
require(psych)
pairs.panels(iris)
names(iris)
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(b)
setwd("~/Environmental Data/Environmental_Data/Data")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("psych")
install.packages("psych")
require(psych)
pairs.panels(iris)
names(iris)
pairs.panels(iris[, c("Sepal.Length", "Sepal.Width", "Petal.Length")])
data(b)
setwd("~/Environmental Data/Environmental_Data/Data")
data(bird.sta.cvs)
dat_bird = read.csv(
here("data", "bird.sta.csv"))
require(here)
